app:
  telegram-bot-token: ${TELEGRAM_TOKEN}
  telegram-bot-name: LinkUpdateTrackerBot

  kafka:
    topic:
      name: "notifications"
#    dead-letter-topic:
#      name: "notifications_dlq"
#      partitions: 1
#      replicas: 1


spring:
  application:
    name: bot

  jackson:
    time-zone: UTC

  kafka:
    bootstrap-servers: localhost:29091

    consumer:
      group-id: consumer-group-1
      key-deserializer: org.apache.kafka.common.serialization.LongDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "edu.java.dto.request"
      auto-offset-reset: latest
    listener:
      concurrency: 1

    producer: #for dlq
      key-serializer: org.apache.kafka.common.serialization.LongSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer


server:
  port: 8090


management:
  server.port: 8190
  endpoints:
    enabled-by-default: false
    web:
      base-path: /
      exposure.include: info,health,prometheus
      path-mapping.prometheus: /metrics
  endpoint:
    info.enabled: true
    health.enabled: true
    prometheus.enabled: true
  metrics.tags.application: ${spring.application.name}


scrapper:
  base-url: http://localhost:8080

logging:
  config: classpath:log4j2-plain.xml

springdoc:
  swagger-ui:
    path: /swagger-ui
